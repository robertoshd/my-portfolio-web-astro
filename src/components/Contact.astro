---
import "../styles/global.css";
---
<section class="contact text-white py-20 md:py-52 m-auto mx-6 sm:mx-6 md:mx-8 lg:mx-80" id="contact">
  
  <!-- Título principal -->
  <h2 class="flex items-center mb-6 text-3xl font-semibold gap-x-3 text-white">
    <svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="currentColor"  class="icon icon-tabler icons-tabler-filled icon-tabler-mail"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M22 7.535v9.465a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-9.465l9.445 6.297l.116 .066a1 1 0 0 0 .878 0l.116 -.066l9.445 -6.297z" /><path d="M19 4c1.08 0 2.027 .57 2.555 1.427l-9.555 6.37l-9.555 -6.37a2.999 2.999 0 0 1 2.354 -1.42l.201 -.007h14z" /></svg>
    Contacto</h2>

  <!-- Contenedor con flex para alinear texto + card -->
  <div class="flex flex-col lg:flex-row gap-12 items-start justify-between">
    
    <!-- Texto a la izquierda -->
    <div class="lg:w-1/2 text-justify">
      <h3 class="text-2xl text-yellow-300 font-semibold mb-4"><span class="text-yellow-300">¿Tienes alguna duda o propuesta?</h3>
      <p class="text-lg text-gray-300">
        Escribirme directamente a mi correo electrónico y me pondré en contacto contigo lo antes posible. También puedes escribirme directamente a mi correo electrónico si lo prefieres, aquí:
      </p>

      <!-- Email -->
      <a href="mailto:joserobertoshdz1423@gmail.com?Subject=Consulta%20sobre%20trabajo" 
         class="flex items-center justify-center mt-10 gap-2 bg-yellow-500 transition-all duration-300 transform hover:-translate-y-1 rounded-full px-4 py-2 text-white font-semibold shadow-md">
        <img src="https://img.icons8.com/ios-glyphs/24/ffffff/new-post.png" alt="Email" />
        Contáctame
      </a>
    </div>

    <!-- Card tecnologías a la derecha -->
    <div class="contact-card w-full lg:w-3/5 bg-[#1a1a2e] p-8 rounded-lg border border-[#2c2c40] shadow-lg">

      <h2 class="flex items-center mb-6 text-xl font-semibold gap-x-3 text-white">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-prompt"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 7l5 5l-5 5" /><path d="M13 17l6 0" /></svg>
        Tecnologías
      </h2>

      <div class="flex items-center gap-6 flex-wrap justify-center md:justify-start">

        <p class="text-purple-400  font-semibold">Frontend</p>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn-icons-png.flaticon.com/512/732/732212.png" alt="HTML" />
          <span>HTML</span>
        </div>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn-icons-png.flaticon.com/512/732/732190.png" alt="CSS" />
          <span>CSS</span>
        </div>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://logo.svgcdn.com/l/astro-icon.svg" alt="Astro" />
          <span>Astro</span>
        </div>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn-icons-png.flaticon.com/512/5968/5968292.png" alt="JavaScript" />
          <span>JavaScript</span>
        </div>
      </div>

      <div class="flex items-center gap-6 flex-wrap py-6 justify-center md:justify-start">
        <p class="text-purple-400 font-semibold">Backend</p>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn.simpleicons.org/php/777BB4" alt="PHP" />
          <span>PHP</span>
        </div>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn-icons-png.flaticon.com/512/5968/5968350.png" alt="Python" />
          <span>Python</span>
        </div>
      </div>

      <div class="flex items-center gap-6 flex-wrap justify-center md:justify-start">
        <p class="text-purple-400 font-semibold">Herramientas</p>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://cdn.simpleicons.org/git" alt="Git" />
          <span>Git</span>
        </div>
        <div class="flex items-center gap-x-2 bg-gray-800 border-2 border-cyan-800 rounded-full px-4 py-2 text-sm text-white font-medium shadow-md">
          <img class="w-4 h-4" src="https://img.icons8.com/material-rounded/24/ffffff/github.png" alt="Git" />
          <span>GitHub</span>
        </div>
      </div>
      
    </div>
  </div>


</section>

<script lang="js">
  document.addEventListener('DOMContentLoaded', () => { // Agrega escucha evento del document con DOM
    
    const form = document.getElementById("contact-form"); // Constante que contiene lo que el usuario ingreso en el formulario con el id 'contact-form'
    const messageSend = document.getElementById("message-send");
    const messageAlert = document.getElementById("message-alert");
    
    if (!form) return; // El formulario es diferente de vacío que retorne

    form.addEventListener('submit', async (e) => { // Agrega escucha evento a través de un submit (botón) de manera asincrona
      e.preventDefault();

      const formData = new FormData(form); // Constante con los datos de form con la función FormData()

      try {
        const res = await fetch('/api/contact', { // Requiere una petición al endpoint en js
          method: 'POST',
          body: formData,
        });

        if (res.ok) { // Si la respuesta del servidor es 400
          messageSend.style.display = "flex"; // Mostrar mensaje enviado
          form.reset(); // Resetea los campos del formulario
        } else {
          const data = await res.json(); // Muestra un error en el formulario
          alert('Error: ' + (data.error || 'No se pudo enviar el mensaje'));
          messageAlert.style.display = "flex";
        }

      } catch (error) {
        alert('Error al enviar el mensaje');
        console.error(error);
      }
  
    });
  });
</script>